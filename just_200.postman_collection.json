{
	"info": {
		"_postman_id": "576e7c16-d85f-49c2-bdb4-1fbc9a3f3a2a",
		"name": "just_200",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "chop",
			"item": [
				{
					"name": "chop-wechatpay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"let qstring = pm.response.json().url.split('=')[1];",
									"console.log(qstring)",
									"pm.test(\"qstring is not empty\", function(){",
									"    pm.expect(qstring).not.eql('');",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{chop_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "payment_method",
									"value": "wechatpay",
									"type": "text"
								},
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "http://merchant.com/ipn",
									"type": "text"
								},
								{
									"key": "callback_url_success",
									"value": "http://merchant.com/success",
									"type": "text"
								},
								{
									"key": "callback_url_fail",
									"value": "http://merchant.com/fail",
									"type": "text"
								},
								{
									"key": "mobile_result_url",
									"value": "http://merchant.com/mobile_confirm?reference=jkh25jh1348fd89sg",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "yes",
									"type": "text"
								},
								{
									"key": "client_country",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/chop/chop",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"chop",
								"chop"
							]
						}
					},
					"response": []
				},
				{
					"name": "chop-wechatpay-cn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"let qstring = pm.response.json().url.split('=')[1];",
									"console.log(qstring)",
									"pm.test(\"qstring is not empty\", function(){",
									"    pm.expect(qstring).not.eql('');",
									"})",
									"pm.test(\"url is cn\", function(){",
									"    pm.expect(pm.response.json().url).contains('api.citconpay.cn');",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{chop_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "payment_method",
									"value": "wechatpay",
									"type": "text"
								},
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "http://merchant.com/ipn",
									"type": "text"
								},
								{
									"key": "callback_url_success",
									"value": "http://merchant.com/success",
									"type": "text"
								},
								{
									"key": "callback_url_fail",
									"value": "http://merchant.com/fail",
									"type": "text"
								},
								{
									"key": "mobile_result_url",
									"value": "http://merchant.com/mobile_confirm?reference=jkh25jh1348fd89sg",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "yes",
									"type": "text"
								},
								{
									"key": "client_country",
									"value": "CN",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/chop/chop",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"chop",
								"chop"
							]
						}
					},
					"response": []
				},
				{
					"name": "chop-upop",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"let qstring = pm.response.json().url.split('=')[1];",
									"console.log(qstring)",
									"pm.test(\"qstring is not empty\", function(){",
									"    pm.expect(qstring).not.eql('');",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let vendor = pm.iterationData.get(\"vendor\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{chop_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "payment_method",
									"value": "upop",
									"type": "text"
								},
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "http://merchant.com/ipn",
									"type": "text"
								},
								{
									"key": "callback_url_success",
									"value": "http://merchant.com/success",
									"type": "text"
								},
								{
									"key": "callback_url_fail",
									"value": "http://merchant.com/fail",
									"type": "text"
								},
								{
									"key": "mobile_result_url",
									"value": "http://merchant.com/mobile_confirm?reference=jkh25jh1348fd89sg",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "yes",
									"type": "text"
								},
								{
									"key": "client_country",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/chop/chop",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"chop",
								"chop"
							]
						}
					},
					"response": []
				},
				{
					"name": "chop-cc",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"let qstring = pm.response.json().url.split('=')[1];",
									"console.log(qstring)",
									"pm.test(\"qstring is not empty\", function(){",
									"    pm.expect(qstring).not.eql('');",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let vendor = pm.iterationData.get(\"vendor\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{chop_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "payment_method",
									"value": "cc",
									"type": "text"
								},
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "http://merchant.com/ipn",
									"type": "text"
								},
								{
									"key": "callback_url_success",
									"value": "http://merchant.com/success",
									"type": "text"
								},
								{
									"key": "callback_url_fail",
									"value": "http://merchant.com/fail",
									"type": "text"
								},
								{
									"key": "mobile_result_url",
									"value": "http://merchant.com/mobile_confirm?reference=jkh25jh1348fd89sg",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "yes",
									"type": "text"
								},
								{
									"key": "client_country",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/chop/chop",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"chop",
								"chop"
							]
						}
					},
					"response": []
				},
				{
					"name": "chop-cancel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Duplicate cancellation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql('duplicate requests');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{chop_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "reason",
									"value": "test",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "14d720c58820b22d3e26b397d",
									"type": "text"
								},
								{
									"key": "transaction_reference",
									"value": "huangtest332211",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/chop/cancel",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"chop",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "chop-transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"success\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{chop_token}}"
							}
						],
						"url": {
							"raw": "https://{{url}}/chop/transactions",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"chop",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "chop-refund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"no refund\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql('Refund amount greater than allowed.');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{chop_token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "8a5c3b7a9c064567fd349334a",
									"type": "text"
								},
								{
									"key": "reason",
									"value": "test",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/chop/refund",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"chop",
								"refund"
							]
						}
					},
					"response": []
				},
				{
					"name": "chop-inquire",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"result is success\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.notify_result).to.eql('success');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{chop_token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "q",
									"value": "351bdf7bf4c5fd073abc43d37",
									"type": "text"
								},
								{
									"key": "inquire_method",
									"value": "real",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/chop/inquire",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"chop",
								"inquire"
							]
						}
					},
					"response": []
				},
				{
					"name": "chop-cc-old",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"q is not empty\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.url.split('=')[1]).not.to.be.empty\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "12341234123412341234123412341234",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "payment_method",
									"value": "cc",
									"type": "text"
								},
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huangtest33221133452",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "http://47.240.46.69:3002/notify",
									"type": "text"
								},
								{
									"key": "callback_url_success",
									"value": "https://sina.com/?a=b",
									"type": "text"
								},
								{
									"key": "callback_url_fail",
									"value": "https://www.baidu.com/?a=b",
									"type": "text"
								},
								{
									"key": "mobile_result_url",
									"value": "https://sina.com/?a=b",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "yes",
									"type": "text"
								},
								{
									"key": "client_country",
									"value": "CN",
									"type": "text",
									"disabled": true
								},
								{
									"key": "user_token",
									"value": "593065b22ddc47a4c8daa24cc",
									"type": "text",
									"disabled": true
								},
								{
									"key": "timeout",
									"value": "200",
									"type": "text",
									"disabled": true
								},
								{
									"key": "ext",
									"value": "{\\\"invoice_soft_descriptor\\\":\\\"ext-test-soft-description1\\\"}",
									"type": "text",
									"disabled": true
								},
								{
									"key": "source",
									"value": "ronghan",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/chop/chop",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"chop",
								"chop"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "mobilepay",
			"item": [
				{
					"name": "mobilepay",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"let qstring = pm.response.text().split('=')[1];",
									"",
									"pm.test(\"qstring is not empty\", function(){",
									"    pm.expect(qstring).not.eql('0&');",
									"})",
									"pm.test(\"url is cn\", function(){",
									"    pm.expect(pm.response.text()).contains('api.citconpay.cn');",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "vendor",
									"value": "alipay",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "http://47.240.46.69:3002/notify",
									"type": "text"
								},
								{
									"key": "callback_url",
									"value": "https://www.baidu.com",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "yes",
									"type": "text"
								},
								{
									"key": "client_country",
									"value": "CN",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/pay_qr",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"pay_qr"
							]
						}
					},
					"response": []
				},
				{
					"name": "mobilepay-cn",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"let qstring = pm.response.text().split('=')[1];",
									"",
									"pm.test(\"qstring is not empty\", function(){",
									"    pm.expect(qstring).not.eql('0&');",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "vendor",
									"value": "alipay",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "http://47.240.46.69:3002/notify",
									"type": "text"
								},
								{
									"key": "callback_url",
									"value": "https://www.baidu.com",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "yes",
									"type": "text"
								},
								{
									"key": "client_country",
									"value": "CN",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/pay_qr",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"pay_qr"
							]
						}
					},
					"response": []
				},
				{
					"name": "mobilepay-exchangerate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"SUCCESS\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.return_code).to.eql('SUCCESS');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "vendor",
									"value": "wechatpay",
									"type": "text"
								},
								{
									"key": "date",
									"value": "20191111",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "Https://{{url}}/payment/exchangerate",
							"protocol": "Https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"exchangerate"
							]
						}
					},
					"response": []
				},
				{
					"name": "mobilepay-list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "https://{{url}}/payment/list?page_no=1&page_size=10",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"list"
							],
							"query": [
								{
									"key": "page_no",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "mobilepay-app",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"result is success\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.result).to.eql('success');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "allow_duplicates",
									"value": "yes",
									"type": "text"
								},
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "body",
									"value": "test",
									"type": "text"
								},
								{
									"key": "callback_url",
									"value": "http//www.google.com",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "https//uat.citconpay.com/payment/notify_wechatpay.php",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "pay-mobile-test",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "test",
									"type": "text"
								},
								{
									"key": "vendor",
									"value": "alipay",
									"type": "text"
								},
								{
									"key": "source",
									"value": "333",
									"type": "text"
								},
								{
									"key": "trans_currency",
									"value": "CNY",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/pay_app",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"pay_app"
							]
						}
					},
					"response": []
				},
				{
					"name": "mobilepay-mini",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"result is success\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.result).to.eql('success');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"description": "必须每次不一样",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "http://52.87.248.227/ipn.php",
									"type": "text"
								},
								{
									"key": "openid",
									"value": "oT7WI5MNS9SzYyJG5UCq33ZdoxRo",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/pay_wxmini",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"pay_wxmini"
							]
						}
					},
					"response": []
				},
				{
					"name": "mobilepay-h5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"q is not empty\", function () {",
									"    ",
									"    pm.expect(pm.response.text()).contains('P')",
									"})",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept-Encoding",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "vendor",
									"value": "alipay",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "http://52.87.248.227/ipn.php",
									"type": "text"
								},
								{
									"key": "callback_url",
									"value": "https://baidu.com",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "yes",
									"type": "text"
								},
								{
									"key": "client_country",
									"value": "CN",
									"type": "text",
									"disabled": true
								},
								{
									"key": "source",
									"value": "123",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/pay",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"pay"
							]
						}
					},
					"response": []
				},
				{
					"name": "mobilepay-cancel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Duplicate cancellation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql('Duplicate cancellation');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept-Encoding",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "reason",
									"value": "test",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "P0006817475-f6c8f98927f44b5319ec",
									"type": "text"
								},
								{
									"key": "transaction_reference",
									"value": "huang112233",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/cancel",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "mobilepay-refund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Invalid source. Please contact Citcon.\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql('Invalid source. Please contact Citcon.');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "reason",
									"value": "test",
									"type": "text",
									"disabled": true
								},
								{
									"key": "transaction_reference",
									"value": "huangmulti1122",
									"type": "text",
									"disabled": true
								},
								{
									"key": "transaction_id",
									"value": "P0000088243-dcca6952675c33d10c42",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/refund",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"refund"
							]
						}
					},
					"response": []
				},
				{
					"name": "mobilepay-inquire",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Invalid source. Please contact Citcon.\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData.message).to.eql('Invalid source. Please contact Citcon.');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept-Encoding",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "inquire_method",
									"value": "real",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang1112233444",
									"type": "text",
									"disabled": true
								},
								{
									"key": "transaction_id",
									"value": "P0000088243-dcca6952675c33d10c42",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/inquire",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"inquire"
							]
						}
					},
					"response": []
				},
				{
					"name": "mobilepay-generic",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"q is not empty\", function () {\r",
									"    \r",
									"    pm.expect(pm.response.text()).contains('P')\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "vendor",
									"value": "generic",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "http://52.87.248.227/ipn.php",
									"type": "text"
								},
								{
									"key": "callback_url",
									"value": "https://baidu.com",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "yes",
									"type": "text"
								},
								{
									"key": "client_country",
									"value": "CN",
									"type": "text",
									"disabled": true
								},
								{
									"key": "note",
									"value": "sdfsadfasdfasdfsaf",
									"type": "text",
									"disabled": true
								},
								{
									"key": "reference2",
									"value": "121212150010010993",
									"type": "text",
									"disabled": true
								},
								{
									"key": "source",
									"value": "111",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/pay_qr",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"pay_qr"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ronghan online",
			"item": [
				{
					"name": "ronghan pay",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"let qstring = pm.response.text().split('=')[1];",
									"",
									"pm.test(\"qstring is not empty\", function(){",
									"    pm.expect(qstring).not.eql('0&');",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ronghan_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "GBP",
									"type": "text"
								},
								{
									"key": "vendor",
									"value": "alipay",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "http://merchant.com/ipn",
									"type": "text"
								},
								{
									"key": "callback_url",
									"value": "http://merchant.com/success",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "yes",
									"type": "text"
								},
								{
									"key": "client_country",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/pay_qr",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"pay_qr"
							]
						}
					},
					"response": []
				},
				{
					"name": "ronghan-h5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"q is not empty\", function () {",
									"    ",
									"    pm.expect(pm.response.text()).contains('P')",
									"})",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ronghan_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept-Encoding",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "GBP",
									"type": "text"
								},
								{
									"key": "vendor",
									"value": "alipay",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "http://52.87.248.227/ipn.php",
									"type": "text"
								},
								{
									"key": "callback_url",
									"value": "https://baidu.com",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "yes",
									"type": "text"
								},
								{
									"key": "client_country",
									"value": "CN",
									"type": "text",
									"disabled": true
								},
								{
									"key": "source",
									"value": "123",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/pay",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"pay"
							]
						}
					},
					"response": []
				},
				{
					"name": "ronghan-refund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql('payment not went through');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ronghan_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "GBP",
									"type": "text"
								},
								{
									"key": "reason",
									"value": "test",
									"type": "text",
									"disabled": true
								},
								{
									"key": "transaction_reference",
									"value": "huangmulti1122",
									"type": "text",
									"disabled": true
								},
								{
									"key": "transaction_id",
									"value": "P0007646696-5fa1ebcededc901dbf90",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/refund",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"refund"
							]
						}
					},
					"response": []
				},
				{
					"name": "ronghan-inquire",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"invalid source\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('Invalid source. Please contact Citcon.');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ronghan_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "inquire_method",
									"value": "real",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang1112233444",
									"type": "text",
									"disabled": true
								},
								{
									"key": "transaction_id",
									"value": "P0007646696-5fa1ebcededc901dbf90",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/inquire",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"inquire"
							]
						}
					},
					"response": []
				},
				{
					"name": "ronghan-generic",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"q is not empty\", function () {\r",
									"    \r",
									"    pm.expect(pm.response.text()).contains('P')\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ronghan_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "GBP",
									"type": "text"
								},
								{
									"key": "vendor",
									"value": "generic",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "http://52.87.248.227/ipn.php",
									"type": "text"
								},
								{
									"key": "callback_url",
									"value": "https://baidu.com",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "yes",
									"type": "text"
								},
								{
									"key": "client_country",
									"value": "CN",
									"type": "text",
									"disabled": true
								},
								{
									"key": "note",
									"value": "sdfsadfasdfasdfsaf",
									"type": "text",
									"disabled": true
								},
								{
									"key": "reference2",
									"value": "121212150010010993",
									"type": "text",
									"disabled": true
								},
								{
									"key": "source",
									"value": "111",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/pay_qr",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"pay_qr"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ams online",
			"item": [
				{
					"name": "ams pay",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"let qstring = pm.response.text().split('=')[1];",
									"",
									"pm.test(\"qstring is not empty\", function(){",
									"    pm.expect(qstring).not.eql('');",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ams_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "trans_amount",
									"value": "60",
									"type": "text"
								},
								{
									"key": "trans_currency",
									"value": "HKD",
									"type": "text"
								},
								{
									"key": "vendor",
									"value": "alipay_hk",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "http://47.240.46.69:3002/notify",
									"type": "text"
								},
								{
									"key": "callback_url",
									"value": "https://www.baidu.com",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "yes",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/pay_qr",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"pay_qr"
							]
						}
					},
					"response": []
				},
				{
					"name": "ams-cancel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"cancelled\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.cancelled).to.eql(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ams_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept-Encoding",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "reason",
									"value": "test",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "P0007646860-3ce3f6ebb400e4566bbc",
									"type": "text"
								},
								{
									"key": "transaction_reference",
									"value": "huang112233",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/cancel",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "ams-refund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"refund amount greater than payment amount\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql('refund amount greater than payment amount');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ams_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept-Encoding",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "trans_amount",
									"value": "60",
									"type": "text"
								},
								{
									"key": "trans_currency",
									"value": "HKD",
									"type": "text"
								},
								{
									"key": "reason",
									"value": "test",
									"type": "text",
									"disabled": true
								},
								{
									"key": "transaction_reference",
									"value": "huangmulti1122",
									"type": "text",
									"disabled": true
								},
								{
									"key": "transaction_id",
									"value": "P0007048651-b2e197bb635dcf56de75",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/refund",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"refund"
							]
						}
					},
					"response": []
				},
				{
					"name": "ams-inquire",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"invalid source\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('Invalid source. Please contact Citcon.');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ams_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept-Encoding",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "inquire_method",
									"value": "real",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang1112233444",
									"type": "text",
									"disabled": true
								},
								{
									"key": "transaction_id",
									"value": "P0007646860-3ce3f6ebb400e4566bbc",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/inquire",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"inquire"
							]
						}
					},
					"response": []
				},
				{
					"name": "ams-h5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"q is not empty\", function () {\r",
									"    \r",
									"    pm.expect(pm.response.text()).contains('P')\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ams_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept-Encoding",
								"type": "text",
								"value": "*"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "trans_amount",
									"value": "200",
									"type": "text"
								},
								{
									"key": "trans_currency",
									"value": "PHP",
									"type": "text"
								},
								{
									"key": "vendor",
									"value": "gcash",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "http://47.240.46.69:3002/notify",
									"type": "text"
								},
								{
									"key": "callback_url",
									"value": "https://www.baidu.com",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "yes",
									"type": "text"
								},
								{
									"key": "timeout",
									"value": "20",
									"type": "text",
									"disabled": true
								},
								{
									"key": "source",
									"value": "1111",
									"type": "text",
									"disabled": true
								},
								{
									"key": "reference2",
									"value": "12323324",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/pay",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"pay"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "pos",
			"item": [
				{
					"name": "pos auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"result is auth\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.error_message).to.eql('Token was occupied (C-I0)\\nContact service provider');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "store_code",
									"value": "TEST",
									"type": "text"
								},
								{
									"key": "nonce",
									"value": "1576228157",
									"type": "text",
									"disabled": true
								},
								{
									"key": "hash",
									"value": "7e51a99481a12dc0bb3d55dcf8f17228",
									"type": "text",
									"disabled": true
								},
								{
									"key": "version",
									"value": "2.6.0",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/initialize",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"initialize"
							]
						}
					},
					"response": []
				},
				{
					"name": "pos pay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"result is pos\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.error_message).to.eql('Invalid Payment Code (A-02)\\nRetry with payment code');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_code}}",
									"type": "text"
								},
								{
									"key": "barcode",
									"value": "284358245383258502",
									"type": "text"
								},
								{
									"key": "total",
									"value": "1",
									"type": "text"
								},
								{
									"key": "pos_local_time",
									"value": "2020-03-06 15:58:42",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "note",
									"value": "test",
									"type": "text"
								},
								{
									"key": "nonce",
									"value": "1111",
									"type": "text",
									"disabled": true
								},
								{
									"key": "hash",
									"value": "298b347e930866434a85cd7c7fe0eece",
									"type": "text",
									"disabled": true
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/pay",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"pay"
							]
						}
					},
					"response": []
				},
				{
					"name": "pos_get_history",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Invalid Source (C-7)\\nRetry under proper network\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error_message).to.eql('Invalid Source (C-7)\\nRetry under proper network');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_code}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/get_history",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"get_history"
							]
						}
					},
					"response": []
				},
				{
					"name": "pos_refund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Invalid Source (C-7)\\nRetry under proper network\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error_message).to.eql('Invalid Source (C-7)\\nRetry under proper network');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_code}}",
									"type": "text"
								},
								{
									"key": "pos_local_time",
									"value": "2020-03-06 21:46:52",
									"type": "text"
								},
								{
									"key": "transaction_reference",
									"value": "huangrefund",
									"type": "text"
								},
								{
									"key": "refund_amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "note",
									"value": "test",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "280024979224",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/refund",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"refund"
							]
						}
					},
					"response": []
				},
				{
					"name": "pos_cancel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Cancellation Failed (C-E5)\\nOrder payment refunded\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql('E5');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_code}}",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "280024979224",
									"type": "text"
								},
								{
									"key": "transaction_reference",
									"value": "ddd",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/cancel",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "pos_inquire",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"code is 00\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql('00');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_code}}",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "280024979224",
									"type": "text"
								},
								{
									"key": "pos_local_time",
									"value": "2020-02-17 16:57:23",
									"type": "text"
								},
								{
									"key": "note",
									"value": "test",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/inquire",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"inquire"
							]
						}
					},
					"response": []
				},
				{
					"name": "pos_showqr",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.result).to.eql('success');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_code}}",
									"type": "text"
								},
								{
									"key": "total",
									"value": "1",
									"type": "text"
								},
								{
									"key": "tip",
									"value": "0",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huangpay",
									"type": "text"
								},
								{
									"key": "pos_local_time",
									"value": "2020-01-27 01:39:42",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/pay_qr",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"pay_qr"
							]
						}
					},
					"response": []
				},
				{
					"name": "pos_signIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"success\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.result).to.eql('success');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_code}}",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/sign_in",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"sign_in"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ams offline",
			"item": [
				{
					"name": "ams offline-pay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_ams}}",
									"type": "text"
								},
								{
									"key": "barcode",
									"value": "288248609273647548",
									"type": "text"
								},
								{
									"key": "total",
									"value": "1",
									"type": "text"
								},
								{
									"key": "pos_local_time",
									"value": "2020-03-06 15:58:42",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "note",
									"value": "test",
									"type": "text"
								},
								{
									"key": "nonce",
									"value": "1111",
									"type": "text",
									"disabled": true
								},
								{
									"key": "hash",
									"value": "298b347e930866434a85cd7c7fe0eece",
									"type": "text",
									"disabled": true
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/pay",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"pay"
							]
						}
					},
					"response": []
				},
				{
					"name": "ams offline_refund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Invalid Source (C-7)\\nRetry under proper network\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error_message).to.eql('Invalid Source (C-7)\\nRetry under proper network');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_ams}}",
									"type": "text"
								},
								{
									"key": "pos_local_time",
									"value": "2020-03-06 21:46:52",
									"type": "text"
								},
								{
									"key": "transaction_reference",
									"value": "huangrefund",
									"type": "text"
								},
								{
									"key": "refund_amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "note",
									"value": "test",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "280024979246",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/refund",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"refund"
							]
						}
					},
					"response": []
				},
				{
					"name": "ams offline_cancel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Cancellation Failed (C-E5)\\nOrder payment refunded\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql('E5');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_ams}}",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "280024979246",
									"type": "text"
								},
								{
									"key": "transaction_reference",
									"value": "ddd",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/cancel",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "ams offline_inquire",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"code is 00\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql('00');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_ams}}",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "280024979246",
									"type": "text"
								},
								{
									"key": "pos_local_time",
									"value": "2020-02-17 16:57:23",
									"type": "text"
								},
								{
									"key": "note",
									"value": "test",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/inquire",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"inquire"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "ronghan offline",
			"item": [
				{
					"name": "ronghan pay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"result is pos\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.error_message).to.eql('Payment Failed (C-ZZ)\\nRetry the transaction.');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_ronghan}}",
									"type": "text"
								},
								{
									"key": "barcode",
									"value": "280046108888332222",
									"type": "text"
								},
								{
									"key": "total",
									"value": "1",
									"type": "text"
								},
								{
									"key": "pos_local_time",
									"value": "2020-03-06 15:58:42",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "GBP",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "note",
									"value": "test",
									"type": "text"
								},
								{
									"key": "nonce",
									"value": "1111",
									"type": "text",
									"disabled": true
								},
								{
									"key": "hash",
									"value": "298b347e930866434a85cd7c7fe0eece",
									"type": "text",
									"disabled": true
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/pay",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"pay"
							]
						}
					},
					"response": []
				},
				{
					"name": "ronghan-refund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"invalid source\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql('D1');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_ronghan}}",
									"type": "text"
								},
								{
									"key": "pos_local_time",
									"value": "2020-03-06 21:46:52",
									"type": "text"
								},
								{
									"key": "transaction_reference",
									"value": "huangrefund",
									"type": "text"
								},
								{
									"key": "refund_amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "note",
									"value": "test",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "280024944044",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "GBP",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/refund",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"refund"
							]
						}
					},
					"response": []
				},
				{
					"name": "ronghan-inquire",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"code is 00\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql('00');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_ronghan}}",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "280024890466",
									"type": "text"
								},
								{
									"key": "pos_local_time",
									"value": "2020-02-17 16:57:23",
									"type": "text"
								},
								{
									"key": "note",
									"value": "test",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/inquire",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"inquire"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "paypal",
			"item": [
				{
					"name": "paypal pay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"result is pos\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.error_message).to.eql('QR Code Invalid (PV06) Retry with payment QR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_paypal}}",
									"type": "text"
								},
								{
									"key": "barcode",
									"value": "79455666",
									"type": "text"
								},
								{
									"key": "total",
									"value": "1",
									"type": "text"
								},
								{
									"key": "pos_local_time",
									"value": "2020-03-06 15:58:42",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "note",
									"value": "test",
									"type": "text"
								},
								{
									"key": "nonce",
									"value": "1111",
									"type": "text",
									"disabled": true
								},
								{
									"key": "hash",
									"value": "298b347e930866434a85cd7c7fe0eece",
									"type": "text",
									"disabled": true
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/pay",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"pay"
							]
						}
					},
					"response": []
				},
				{
					"name": "paypal-cancel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Cancellation Failed (C-E5)\\nOrder payment refunded\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql('E5');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_paypal}}",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "280024874600",
									"type": "text"
								},
								{
									"key": "transaction_reference",
									"value": "ddd",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/cancel",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "paypal-inquire",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"code is 00\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql('00');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_paypal}}",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "280024874600",
									"type": "text"
								},
								{
									"key": "pos_local_time",
									"value": "2020-02-17 16:57:23",
									"type": "text"
								},
								{
									"key": "note",
									"value": "test",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/inquire",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"inquire"
							]
						}
					},
					"response": []
				},
				{
					"name": "paypal-refund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Invalid Source (C-7)\\nRetry under proper network\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error_message).to.eql('Invalid Source (C-7)\\nRetry under proper network');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{terminal_paypal}}",
									"type": "text"
								},
								{
									"key": "pos_local_time",
									"value": "2020-03-06 21:46:52",
									"type": "text"
								},
								{
									"key": "transaction_reference",
									"value": "huangrefund",
									"type": "text"
								},
								{
									"key": "refund_amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "note",
									"value": "test",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "280024874600",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/refund",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"refund"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "cup",
			"item": [
				{
					"name": "cup pay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"result is cup\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.error_message).to.eql('[scanCodeId]DATA_FORMAT_ERROR');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "C8AEE755",
									"type": "text"
								},
								{
									"key": "barcode",
									"value": "hQVDUFY",
									"type": "text"
								},
								{
									"key": "total",
									"value": "1",
									"type": "text"
								},
								{
									"key": "pos_local_time",
									"value": "2020-03-06 15:58:42",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "note",
									"value": "test",
									"type": "text"
								},
								{
									"key": "nonce",
									"value": "1111",
									"type": "text",
									"disabled": true
								},
								{
									"key": "hash",
									"value": "298b347e930866434a85cd7c7fe0eece",
									"type": "text",
									"disabled": true
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/pay",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"pay"
							]
						}
					},
					"response": []
				},
				{
					"name": "cup-inquire",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"code is 00\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql('00');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "C8AEE755",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "280024670226",
									"type": "text"
								},
								{
									"key": "pos_local_time",
									"value": "2020-02-17 16:57:23",
									"type": "text"
								},
								{
									"key": "note",
									"value": "test",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/inquire",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"inquire"
							]
						}
					},
					"response": []
				},
				{
					"name": "cup-refund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Invalid Source (C-7)\\nRetry under proper network\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error_message).to.eql('Invalid Source (C-7)\\nRetry under proper network');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "C8AEE755",
									"type": "text"
								},
								{
									"key": "pos_local_time",
									"value": "2020-03-06 21:46:52",
									"type": "text"
								},
								{
									"key": "transaction_reference",
									"value": "huangrefund",
									"type": "text"
								},
								{
									"key": "refund_amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "note",
									"value": "test",
									"type": "text"
								},
								{
									"key": "transaction_id",
									"value": "280024670226",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/posp/rest/refund",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"posp",
								"rest",
								"refund"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "upop",
			"item": [
				{
					"name": "upop-refund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Invalid source. Please contact Citcon.\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql('Invalid source. Please contact Citcon.');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "61FB84DB288D4075AC1B229717E319F8",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "reason",
									"value": "test",
									"type": "text",
									"disabled": true
								},
								{
									"key": "transaction_reference",
									"value": "huangmulti1122",
									"type": "text",
									"disabled": true
								},
								{
									"key": "transaction_id",
									"value": "P0002309283-e41191f48bc0bfaaf40e",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/refund",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"refund"
							]
						}
					},
					"response": []
				},
				{
					"name": "upop-inquire",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"invalid source\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('Invalid source. Please contact Citcon.');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "61FB84DB288D4075AC1B229717E319F8",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept-Encoding",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "inquire_method",
									"value": "real",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang1112233444",
									"type": "text",
									"disabled": true
								},
								{
									"key": "transaction_id",
									"value": "P0002309283-e41191f48bc0bfaaf40e",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/inquire",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"inquire"
							]
						}
					},
					"response": []
				},
				{
					"name": "upop-pay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"uri\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.uri).to.eql('https:\\/\\/gateway.95516.com\\/gateway\\/api\\/frontTransReq.do');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "61FB84DB288D4075AC1B229717E319F8",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept-Encoding",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "vendor",
									"value": "upop",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "huang monitor",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "http://52.87.248.227/ipn.php",
									"type": "text"
								},
								{
									"key": "callback_url",
									"value": "https://baidu.com",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "yes",
									"type": "text"
								},
								{
									"key": "client_country",
									"value": "CN",
									"type": "text",
									"disabled": true
								},
								{
									"key": "source",
									"value": "123",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/pay",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"pay"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "cc",
			"item": [
				{
					"name": "cc-delete_card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"no cards\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.result).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cc_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "card_number",
									"value": "35**********4445",
									"type": "text"
								},
								{
									"key": "user_token",
									"value": "13dae7e8d5702411ac4a912ec",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/delete_card",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"delete_card"
							]
						}
					},
					"response": []
				},
				{
					"name": "cc-inquire_cards",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"no cards\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.cards).to.be.empty\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cc_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept-Encoding",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_token",
									"value": "bcecf1e0ae03d569594991edb",
									"type": "text"
								},
								{
									"key": "page_no",
									"value": "1",
									"type": "text"
								},
								{
									"key": "page_size",
									"value": "10",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/inquire_cards",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"inquire_cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "cc-inquire",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Invalid source. Please contact Citcon.\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"   \r",
									"    pm.expect(jsonData.message).to.eql('Invalid source. Please contact Citcon.');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cc_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept-Encoding",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "transaction_id",
									"value": "P0003486112-41ed9f0b7923d210ac23",
									"type": "text"
								},
								{
									"key": "inquire_method",
									"value": "real",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "2154657657686787691",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/inquire",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"inquire"
							]
						}
					},
					"response": []
				},
				{
					"name": "cc-key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"pulicKey is exist\", function () {\r",
									"    var publicKey = pm.response.json().public_key;\r",
									"    pm.expect(publicKey).to.not.be.empty;\r",
									"    publicKey = publicKey.replace(/\\//g,\"/\");\r",
									"    pm.globals.set(\"publicKey\",publicKey);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function RandomRange(min, max) {\r",
									"    var returnStr = \"\",\r",
									"\trange = (max ? Math.round(Math.random() * (max-min)) + min : min),\r",
									"\tarr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd','e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r",
									"\tfor(var i=0; i<range; i++){\r",
									"\t    var index = Math.round(Math.random() * (arr.length-1));\r",
									"\t    returnStr += arr[index];\r",
									"\t}\r",
									"\treturn returnStr;\r",
									"}\r",
									"\r",
									"RandomRange(1,25)\r",
									"pm.variables.set(\"reference\", RandomRange(1,25));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cc_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept-Encoding",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "vendor",
									"value": "cc",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "{{reference}}",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "https://{{url}}/chop/ipn_cc",
									"type": "text"
								},
								{
									"key": "callback_url",
									"value": "http://merchant.com/success",
									"type": "text"
								},
								{
									"key": "cancel_url",
									"value": "http://merchant.com/fail",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "no",
									"type": "text"
								},
								{
									"key": "source",
									"value": "chop",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{url}}/payment/key",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"key"
							]
						}
					},
					"response": []
				},
				{
					"name": "cc-pay",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Must pass in token or card info\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error_message).to.eql('Must pass in token or card info');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cc_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept-Encoding",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "1",
									"type": "text"
								},
								{
									"key": "currency",
									"value": "USD",
									"type": "text"
								},
								{
									"key": "vendor",
									"value": "cc",
									"type": "text"
								},
								{
									"key": "reference",
									"value": "{{reference}}",
									"type": "text"
								},
								{
									"key": "ipn_url",
									"value": "https://{{url}}/chop/ipn_cc",
									"type": "text"
								},
								{
									"key": "allow_duplicates",
									"value": "no",
									"type": "text"
								},
								{
									"key": "callback_url",
									"value": "http://merchant.com/success",
									"type": "text"
								},
								{
									"key": "cancel_url",
									"value": "http://merchant.com/fail",
									"type": "text"
								},
								{
									"key": "note",
									"value": "note",
									"type": "text"
								},
								{
									"key": "source",
									"value": "chop",
									"type": "text",
									"disabled": true
								},
								{
									"key": "user_token",
									"value": "61325db0fb1e7531f18c209bd",
									"type": "text",
									"disabled": true
								},
								{
									"key": "data",
									"value": "card_number=370000000000002&exp_date=1222&cvv2cvc2=2222&avs_zip=22222&first_name=xiaoqian&last_name=huang&avs_address=111&address2=222&city=city&state=state&country=country&email=email@22.com",
									"type": "text"
								},
								{
									"key": "card_on_file",
									"value": "yes",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{url}}/payment/pay",
							"protocol": "https",
							"host": [
								"{{url}}"
							],
							"path": [
								"payment",
								"pay"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "dashboard",
			"item": [
				{
					"name": "dashboard-login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"console.log(pm.request)\r",
									"console.log(pm.response.json())\r",
									"pm.test(\"login success\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql('User Login Successful!');\r",
									"});\r",
									"let session_id = pm.response.json().session_id\r",
									"pm.globals.set('session_id',session_id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"CITCON AG\",\"password\":\"ba43f1231b0147d790e3cb925aaa9820\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dashboard}}/api/login",
							"protocol": "https",
							"host": [
								"{{dashboard}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "dashboard-transactions lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"merchantId\":\"634201708355000\",\"sessionId\":\"{{session_id}}\",\"rowCount\":10,\"pageNumber\":0,\"startDate\":\"\",\"endDate\":\"\",\"searchKey\":\"\",\"hierarchy\":9930,\"selectedMid\":9930}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dashboard}}/api/transactions_lookup",
							"protocol": "https",
							"host": [
								"{{dashboard}}"
							],
							"path": [
								"api",
								"transactions_lookup"
							]
						}
					},
					"response": []
				},
				{
					"name": "dashboard-all transactions search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"sessionId\":\"{{session_id}}\",\"rowCount\":10,\"pageNumber\":0,\"startDate\":\"2020-10-25\",\"endDate\":\"2020-11-01\",\"searchKey\":\"\",\"timezone\":\"America/Los_Angeles\",\"download\":false}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dashboard}}/api/all_transactions_search",
							"protocol": "https",
							"host": [
								"{{dashboard}}"
							],
							"path": [
								"api",
								"all_transactions_search"
							]
						}
					},
					"response": []
				},
				{
					"name": "dashboard-summary-daily",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"code is 200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"hierarchy_user_id\":9930,\"merchantId\":\"634201708355000\",\"session_id\":\"{{session_id}}\",\"search_type\":\"daily\",\"date_month\":\"\",\"page_number\":\"0\",\"row_count\":10}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dashboard}}/api/tranx/summary",
							"protocol": "https",
							"host": [
								"{{dashboard}}"
							],
							"path": [
								"api",
								"tranx",
								"summary"
							]
						}
					},
					"response": []
				},
				{
					"name": "dashboard-download records",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"merchantId\":\"634201708355000\",\"sessionId\":\"{{session_id}}\",\"rowCount\":10,\"pageNumber\":0,\"startDate\":\"\",\"endDate\":\"\",\"searchKey\":\"\",\"hierarchy\":9930,\"selectedMid\":9930}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dashboard}}/api/download_records",
							"protocol": "https",
							"host": [
								"{{dashboard}}"
							],
							"path": [
								"api",
								"download_records"
							]
						}
					},
					"response": []
				},
				{
					"name": "dashboard-summary-detail daily report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"merchantId\":\"634201708355000\",\"date\":\"2020-10-29\",\"sessionId\":\"{{session_id}}\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dashboard}}/api/detail_daily_report",
							"protocol": "https",
							"host": [
								"{{dashboard}}"
							],
							"path": [
								"api",
								"detail_daily_report"
							]
						}
					},
					"response": []
				},
				{
					"name": "dashboard-summary-detail month report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"merchantId\":\"634201708355000\",\"month\":\"Oct 2020\",\"sessionId\":\"{{session_id}}\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dashboard}}/api/detail_month_report",
							"protocol": "https",
							"host": [
								"{{dashboard}}"
							],
							"path": [
								"api",
								"detail_month_report"
							]
						}
					},
					"response": []
				},
				{
					"name": "dashboard-summary-monthly",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"code is 200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"hierarchy_user_id\":9930,\"merchantId\":\"634201708355000\",\"session_id\":\"{{session_id}}\",\"search_type\":\"monthly\",\"date_month\":\"\",\"page_number\":\"0\",\"row_count\":10}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dashboard}}/api/tranx/summary",
							"protocol": "https",
							"host": [
								"{{dashboard}}"
							],
							"path": [
								"api",
								"tranx",
								"summary"
							]
						}
					},
					"response": []
				},
				{
					"name": "dashboard-change password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"code is 200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.code).to.eql('0000');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "session_token",
								"value": "{{session_id}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"oldpassword\":\"ba43f1231b0147d790e3cb925aaa9820\",\"newpassword\":\"ba43f1231b0147d790e3cb925aaa9820\",\"confirmpassword\":\"ba43f1231b0147d790e3cb925aaa9820\",\"email\":\"CITCON AG\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dashboard}}/api/change_password",
							"protocol": "https",
							"host": [
								"{{dashboard}}"
							],
							"path": [
								"api",
								"change_password"
							]
						}
					},
					"response": []
				},
				{
					"name": "dashboard-logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"code is 200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql('User logged out successfully');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"CITCON AG\",\"sessionId\":\"{{session_id}}\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dashboard}}/api/logout",
							"protocol": "https",
							"host": [
								"{{dashboard}}"
							],
							"path": [
								"api",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "dashboard-forgot password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"code is 200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql('Password reset email was sent to your email address. Please follow the instruciton in the email to reset your password.');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"CITCON AG\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{dashboard}}/api/forgot_password",
							"protocol": "https",
							"host": [
								"{{dashboard}}"
							],
							"path": [
								"api",
								"forgot_password"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}